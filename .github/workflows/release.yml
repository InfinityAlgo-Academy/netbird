name: Release

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
  pull_request:
    paths:
      - 'go.mod'
      - 'go.sum'
      - '.goreleaser.yml'
      - '.goreleaser_ui.yaml'
      - '.goreleaser_ui_darwin.yaml'
      - '.github/workflows/release.yml'
      - 'release_files/**'
      - '**/Dockerfile'
      - '**/Dockerfile.*'
      - 'client/ui/**'

env:
  SIGN_PIPE_VER: "v0.0.11"
  GORELEASER_VER: "v1.14.1"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || github.actor_id }}
  cancel-in-progress: true

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      flags: ""
    steps:
      - if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        run: echo "flags=--snapshot" >> $GITHUB_ENV
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # It is required for GoReleaser to work properly
      -
        name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"
          cache: false
      -
        name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-releaser-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-releaser-
      -
        name: Install modules
        run: go mod tidy
      -
        name: check git status
        run: git --no-pager diff --exit-code
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Install OS build dependencies
        run: sudo apt update && sudo apt install -y -q gcc-arm-linux-gnueabihf gcc-aarch64-linux-gnu

      - name: Install rsrc
        run: go install github.com/akavel/rsrc@v0.10.2
      - name: Generate windows rsrc amd64
        run: rsrc -arch amd64 -ico client/ui/netbird.ico -manifest client/manifest.xml -o client/resources_windows_amd64.syso
      - name: Generate windows rsrc arm64
        run: rsrc -arch arm64 -ico client/ui/netbird.ico -manifest client/manifest.xml -o client/resources_windows_arm64.syso
      - name: Generate windows rsrc arm
        run: rsrc -arch arm -ico client/ui/netbird.ico -manifest client/manifest.xml -o client/resources_windows_arm.syso
      - name: Generate windows rsrc 386
        run: rsrc -arch 386 -ico client/ui/netbird.ico -manifest client/manifest.xml -o client/resources_windows_386.syso
      -
        name: upload non tags for debug purposes
        uses: actions/upload-artifact@v3
        with:
          name: release
          path: dist/
          retention-days: 3