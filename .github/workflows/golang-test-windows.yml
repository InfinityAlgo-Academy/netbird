on:
  push:
name: Test Code Windows
jobs:
  pre:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - run: bash -x wireguard_nt.sh
        working-directory: client
      - run: ls -l client/*syso
      - uses: actions/upload-artifact@v2
        with:
          name: syso
          path: client/*.syso
#            client/.deps/wireguard-nt/bin/amd64/wireguard.dll
          retention-days: 1

  test:
    needs: pre
    strategy:
      matrix:
        go-version: [1.17.x]
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - uses: actions/cache@v2
        if: always()
        with:
          path: |
            %LocalAppData%\go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - uses: actions/download-artifact@v2
        with:
          name: syso
          path: iface\

      - name: Download EnVar plugin for NSIS
        uses: carlosperate/download-file-action@v1.0.3
        with:
          file-url: https://download.sysinternals.com/files/PSTools.zip
          file-name: PSTools.zip
          location: ${{ github.workspace }}

      - name: Extract PSTools
        run: Expand-Archive -Path ${{ github.workspace }}\PSTools.zip  -DestinationPath ${{ github.workspace }}\PSTools
      - run: go mod tidy
      - name: Test build
        run: go test -p 1 -tags=load_wgnt_from_rsrc ./iface

      - name: Test build with PSTools
        if: always()
        run: ${{ github.workspace }}\PSTools\PsExec64.exe -accepteula -s  -w ${{ github.workspace }} go test -v -p 1 -tags=load_wgnt_from_rsrc ./iface

